#todo: que es una variable

#lastname = "lozano"
#entero= 2
#booleano= True
#real= 2.3

#print(lastname)
#print(entero)
#print(booleano)
#print(real)

#capturo datos por teclado
#name= input("ingrese su nombre:")
#print("el nombre ingresado es: " +name)
#age=input("ingrese su edad:")
#print("La edad es" + age)
#print(f"el nombre ingresado es {name} y su edad es {age}")

#todo:solicitar por teclado dos valores y mostrar el resultado de la suma de esos dos valores

numero1=int(input("ingrese el primer valor:"))
numero2=int(input("ingrese el segundo valor:"))
suma=numero1+numero2

print(f"{numero1} + {numero2} = {suma}")


cadena= "noicamargorP, 5.9 , otinaluF emsoC"
print(cadena[33:0:-1] )

nombre=(cadena [33:19:-1])
print(nombre)

nota=(cadena[17:13:-1])
print(nota)

materia=(cadena[11::-1])
print(materia)

print(f"mi nombre es {nombre} y me nota es {nota} en la materia {materia}")








###3operadores####
condicion= (nombre !="****"),(edad>10 and edad<18)
·····································································································




edad= int(input ("Ingrese su edad: "))
sexo= (input ("ingrese su genero, 'f' FEMENINO O 'M' MASCULINO: "))

if edad >=18 and sexo.lower()=="f":
    print("puede ingresar")
     
else:
    print("no puede ingresar")

__________________________________________________________________________________________

numero_1=int(input("ingrese el primer numero,para ver cual es el mayor de los tres:"))
numero_2=int(input("ingrese segundo numero"))
numero_3=int(input("ingrese tercer numero"))

numeros=(numero_1,numero_2,numero_3)
print(numeros)

if numero_1>numero_2 and numero_1> numero_3:
    print(f"(numero_1)es el mayor ")
elif numero_2>numero_3 and numero_2>numero_1:
    print(f"(numero_2)es el mayor")
elif numero_3>numero_2 and numero_3>numero_1:
    print(f"(numero_3)es el mayor")


__________________________________________________
num=1
acumulador= 0
while num!=0 :
   num = int(input("Escribe numeros hasta poner cero: "))
   acumulador=acumulador+num
else:
    print(f"la suma es:{acumulador}")
________________________________________________________

cadena=input("ingrese la palabra:")
vocal="aeiouAEIOU"
tiene_vocal=False
for letra in cadena:
    if letra in vocal:
        tiene_vocal=True
        break
if tiene_vocal:
    print("tiene vocales")

else: 
    print("no tiene vocales")        
    
    
________________________________________
#conjunto= set

set={1,2,3,4,5,"G",-2}    
print(set)
print(type(set))

#metodo ADD

numeros={1,2,3,4,5}
print(numeros)
numeros.add(6)
print(numeros)

#update 
animales={"Lobo","Oveja","Perro"}
print(animales)
animales.update(["Conejo","liebre", "Leon"])
print(animales)

#LEN
print(len(animales))

#discard

series=("El rey leon","Coraje","Dragon ball")
print(series)
series.discard("GOAT")
series.remove("GOAT")
print(series)

###metodos que se pueden utilizar para saber todos los modos que se pueden utilizar
print(dir(series))


### POP()

numeros={1,2,3,4}
while numeros:
    print(f('en esta vuelta salio el numero{numeros})) 


###definicion del diccionario:
alumno={
    "nombre": "alejo",
    "apellido": "riel",
    "mail": "alejoo@gmail.com",
    "edad":25
}
print(alumno)


libro={
    "nombre":"El principito",
    "autor":"KALIAN GORDS",
    "genero":"FANTASTICO",
    "año":1993,
    "editorial":"CANOL"
}

print(libro)
print(libro["nombre"])
print([])

--------------------------------------------------------------
#def saludar():
#    print("Estoy saludando desde la funcion")

#saludar()
#saludar()
#saludar()

#def saludar_con_nombre(nombre):
#    print(f"Hola {nombre} como estas?")

#saludar_con_nombre("Alejo")    

##Variables locales


#def test():
#    variable_test=10
#    print(variable_test)

#print(variable_test)

##variable global
#variable_test=10
#def test():
#    print(variable_test)
    
#test()    

##definicion global y uso local
#variable_test=10
#def test():
#    variable_test=15
#    print(variable_test)

#test()

##todo:return
#def saludar(nombre):
#    saludando=print(f"Hola {nombre} como estas?")
#    return saludando
#    print("El saludo fue correcto")   # esto no se ejecuta
#saludar("Alejo")

##TODO: TIPO VALOR return

def numeros():
    return 6

resultado= numeros() + 5
print(resultado)
print(f"{numeros() * 2}")

-------------------------------------------------------------------------------------------------
#num1 = int(input("ingrese el primer numero,para ver cual es el mayor de los tres:"))
#num2 = int(input("ingrese segundo numero"))
#num3 = int(input("ingrese tercer numero"))


#def num_mayor(num1,num2,num3):
#    if num1>num2 and num1> num3:
#        print(f" {num1} es mayor")
#    if num2>num3 and num2>num1:
#        print(f"{num2} es el mayor")
#    if num3>num2 and num3>num1:
#        print(f"{num3} es el mayor")
    

#num_mayor(num1,num2,num3)

## area de ciculo
#def area_circulo(radio, pi)
#    return pi *(radio ** 2)

#resultado= area_circulo(10,3.14)
#print(resultado)

##parametro default
#def area_circulo(radio,pi=3.14):
#    return pi *(radio ** 2)

#resultado= area_circulo(10)
#print(resultado)



#def numeros (num1,num2=10):
#    return num1 + num2

#resultado=numeros(20)
#print(resultado)

##escribir una funcion que calcule el promedio de una lista de numeros.si no se proporciona una lista el valor por defecto  
sera una lista vacia.

def promedio_lista(numeros=[]):
    if len(numeros)== 0:
        return "la lista esta vacia"
    else:
        return sum(numeros) / len(numeros) 

###prueba pasando argumentos
resultado=promedio_lista([5,10,8])
print(resultado)
###lista vacia sin argumentos
resultado= promedio_lista()
print(resultado)



--------------------------------------------------------------
    
##Escriba una funcion llamada concatenar que acepte un numero variable 
#de argumentos de strings y devuelva una cadena que contenga todos los 
#argumentos contatnados en una sola cadena separada por un separador 
#opcional.  La funcion debe utilizar *args para aceptar un numero 
#variable de argumentos y un argumento adicional opcional llamado 
#separador que se utilizara como el separador de la cadena. 
#Si no seproporciona un separador, la fucion debe utilizar un espacio en blanco por defecto 

def concatenar(*args, separador=" "):
    return separador.join(args)


palabras=concatenar("Hola", "Nestor", "como", "estas", "saludos" , "a", "Robert")
print(palabras)
-------------------------------------------------------------------------
#En Python tenemos la posibilidad de declarar varibles vacias, es decir con valor "none"
#nombre= None
#print(nombre)
#print(type(nombre))


#OPERADOR TERNARIO

#definicion variables 

#nota=4 
#color= None

#logica del programa

#if nota>=7:
#    color="Verde"
#else:
#    color="rojo"

#llamada

#print(nota, color)        

#operador ternario
#nota= 4
#color="verde" if nota >= 7 else "rojo"

#print(nota,color)

#ejercicio:dado un numero entero de x imprimir si es par, y "es impar"

#numero=int(input("ingrese un numero:"))

#print("es par") if numero % 2 == 0 else print("es impar")
#print("es par" if numero % 2 == 0 else "es impar")

#ejercicio:dados dos numeros enteros A y B, imprimir"A es mayor" si A es mayor que B, "B es mayor " si B es mayor que A, y "SON IGUALES",si ambos numeros son iguales.

A= int(input("ingrese valor de A :"))
B= int(input("ingrese valor de B :"))

print("A es mayor que B" if A>B else "B es mayor que A" if B>A else "son iguales")

-----------------------------------------------------------------------------------
#kwargs: De esta manera trabajamos con diccionarios. Cada argumento con nombre se convierte en un par de clave-valor en la direccion.

#def usuario(**kwargs):
#    print(kwargs)
#    print(type(kwargs))

#usuario(nombre="Roberto",apellido="Aguirre", edad=25)

#usuario(Dnaiel=[10,3,0], Nestor=[10,4,10])

#Funciones anidadas: las funciones pueden ser anidadas, es decir una funcion puede contener otra funcion:

#ejemplo: Operaciones bancarias: Deposito, retiro

# FORMA_1
#def operacion():
#    def deposito(cantidad, balance):
#        return balance + cantidad
#    def retiro(cantidad, balance):
#        if cantidad<= balance:
#            return balance - cantidad
#        else:
#            return None
        
#    print(deposito(10,20))        
#    print(retiro(50,80))

#operacion()

#FORMA_2

#def operacion(cantidad,balance,tipo="deposito"):
#    def deposito(cantidad,balance):
#        return balance + cantidad

#    def retiro(cantidad, balance):
#        if cantidad<= balance:
#                return balance - cantidad
#        else:
#            return None

#    if tipo == "deposito":
#        return deposito(cantidad,balance)
#    elif tipo == "retiro":
#        return retiro(cantidad, balance)
    
#resultado=operacion(10,30)  #TOMA EL VALOR POR DEFAULT QUE ES EL "DEPOSITO" 
#resultado=operacion(10,30,"retiro")
#print(resultado) 

#todo:Escribir una funcion calculadora que reciba dos numeros y un caracter que indique la operacion a realizar(+,-,*,/). La fucion debe devolver el resultado de la operacion aritmetica. utilizar funciones animadas para implementar las operaciones.

def calculadora(num1,num2,operacion):
     def suma(num1,num2):
          return (num1+num2)
     def rest(num1,num2):
          return(num1-num2)
     def multi(num1,num2):
          return(num1*num2)
     def division(num1,num2):
          return(num1/num2)
     if operacion == "+":
          return suma(num1,num2)
     elif operacion == "-":
          return rest(num1,num2)
     elif operacion == "*":
          return multi(num1,num2)
     elif operacion == "/":
        return division(num1,num2)
     else:
        return None

resultado=calculadora(10,5,operacion='-')
print(resultado)         
     
resultado=calculadora(10,5,operacion='+')
print(resultado)         

resultado=calculadora(10,5,operacion='/')
print(resultado)         

resultado=calculadora(10,5,operacion='*')
print(resultado)         
